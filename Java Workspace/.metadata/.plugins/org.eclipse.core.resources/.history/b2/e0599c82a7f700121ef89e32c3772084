package Tweetmodelextractor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;


import com.csvreader.CsvReader;

import  Tweetmodelextractor.WriteXMLFile;


public class modelextractor {
	
	
	static String[] event1 = {"Bolivia","President Morales","Morales","RT","interview","offer","Snowden","humanitarian","asylum","#Morales","#Snowden","France","Portugal","Italy","refusing","refuse","permission","overfly","Attack","Life","Spain","demanding","search","Morales","plane","Snowden","Austrian","authorities","inspect","Bolivian","Morales","Vienna","no Snowden","blind passenger","vienna","Snowden on Plane","Bolivia","on Plane"
} ;
	
	
	static String[] event1files = {"F://tweetdata/2013_07_01_19.csv","F://tweetdata/2013_07_01_20.csv","F://tweetdata/2013_07_01_21.csv","F://tweetdata/2013_07_01_22.csv","F://tweetdata/2013_07_01_23.csv","F://tweetdata/2013_07_02_00.csv"
		} ;
	
	static String[] event2files = {"F://tweetdata/2013_07_02_01.csv","F://tweetdata/2013_07_02_02.csv","F://tweetdata/2013_07_02_03.csv","F://tweetdata/2013_07_02_04.csv","F://tweetdata/2013_07_02_05.csv","F://tweetdata/2013_07_02_06.csv","F://tweetdata/2013_07_02_07.csv","F://tweetdata/2013_07_02_08.csv","F://tweetdata/2013_07_02_09.csv"
		,"F://tweetdata/2013_07_02_10.csv","F://tweetdata/2013_07_02_11.csv","F://tweetdata/2013_07_02_12.csv","F://tweetdata/2013_07_02_13.csv","F://tweetdata/2013_07_02_14.csv","F://tweetdata/2013_07_02_15.csv","F://tweetdata/2013_07_02_16.csv","F://tweetdata/2013_07_02_17.csv","F://tweetdata/2013_07_02_18.csv","F://tweetdata/2013_07_02_19.csv"
		,"F://tweetdata/2013_07_02_20.csv","F://tweetdata/2013_07_02_21.csv","F://tweetdata/2013_07_02_22.csv","F://tweetdata/2013_07_02_23.csv"} ;
	
	static String[] event3files = {"F://tweetdata/2013_07_02_01.csv","F://tweetdata/2013_07_02_02.csv","F://tweetdata/2013_07_02_03.csv","F://tweetdata/2013_07_02_04.csv","F://tweetdata/2013_07_02_05.csv","F://tweetdata/2013_07_02_06.csv","F://tweetdata/2013_07_02_07.csv","F://tweetdata/2013_07_02_08.csv","F://tweetdata/2013_07_02_09.csv"
		,"F://tweetdata/2013_07_02_10.csv","F://tweetdata/2013_07_02_11.csv","F://tweetdata/2013_07_02_12.csv","F://tweetdata/2013_07_02_13.csv","F://tweetdata/2013_07_02_14.csv","F://tweetdata/2013_07_02_15.csv","F://tweetdata/2013_07_02_16.csv","F://tweetdata/2013_07_02_17.csv","F://tweetdata/2013_07_02_18.csv","F://tweetdata/2013_07_02_19.csv"
		,"F://tweetdata/2013_07_02_20.csv","F://tweetdata/2013_07_02_21.csv","F://tweetdata/2013_07_02_22.csv","F://tweetdata/2013_07_02_23.csv"} ;
	
	
public static void main(String[] args) {
		
	startReading(); 
		
	}
	
	
	public static void startReading ()
	{
		int idCount = 0;
		ArrayList<Model> alltweets= new ArrayList<Model>();
		for (int t=0; t<event1files.length; t++)
		{
		
		try {
			//CsvReader products = new CsvReader("D://workspace/workspace_netbeans/GIS/data/bw-coastline.txt");
			CsvReader products = new CsvReader(event1files[t],'\t');
		
			products.readHeaders();
		for ( int i = 0; i<products.getHeaders().length;i++)
			{
			System.out.println(products.getHeaders()[i]);
			}
			

			
			
				while (products.readRecord())
				{
					String creationDate = products.get("TWEET_CREATIONDATE");
					String tweetContent = products.get("TWEET_CONTENT");
					String tweetUser = products.get("USER_NAME");
					String tweetScreenName = products.get("USER_SCREENNAME");
					String coordinates = products.get("TWEET_COORDS");
					String Userstatusescount = products.get("USER_STATUSESCOUNT");
					String UserFollowers = products.get("USER_FOLLOWERSCOUNT");
					String UserLocation = products.get("USER_LOCATION");
					String UserFriendscount = products.get("USER_FRIENDSCOUNT");
					String tweetID = products.get("TWEET_ID");
					String language = products.get("USER_LANGUAGE");
					
					
					
					if( coordinates==null || coordinates=="null" || coordinates=="")
					{
					continue;

					}
					else
					{
					int keywordcount=0;
					for (int s=0; s<event1.length; s++)
					{
						if(tweetContent.contains(event1[s]))
						{
							keywordcount++;
						}
					}
					
					if(keywordcount>=3)
					{
				System.out.println(coordinates);
						alltweets.add(new Model(tweetContent,creationDate,coordinates,tweetContent,tweetUser,tweetScreenName,UserFollowers,UserLocation,UserFriendscount)
								);
						idCount++;
					}
					}
					
					
					
				
				}
				
		
	
			products.close();
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	
	}
		System.out.println(idCount);
		WriteXMLFile.writeXML(alltweets);
		
	}
	

	
		   

		 
	



}
